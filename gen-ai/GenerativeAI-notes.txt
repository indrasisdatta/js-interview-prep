AI
 -> ML 
    -> Reinforcement learning
    -> Deep learning (specialized branch of ML which focuses on multi-layered neural network)
        -> Generative AI
           - Transformer architecture consisting of auto-encoders and decoders
           - Encoders encode raw i/p data into compact latent representation vector
           - Decoders translate vectors to meaningful data

Foundation Models (FM)
  -> Large Language Models (LLM) - subset of Foundation models

Open AI's ChatGPT - GPT (Generative Pretrained Transformer) uses GPT 4o
Google's Gemini - uses combination of LaMDA, PALM2
Anthropic's Claude - uses Claude Opus 

AI Tools for Developers: Github Copilot, Aider, Cursor, Windsurf

Agentic AI assistants (Aider, Cursor, Windsurf)
AI assistants (Gitub copilot)
AI agents (Devin, Github Copilot workspace, MetaGPT) 
AI code review assistants (CodeRabbit)
AI app builders (Github Spark)

Visual Copilot - Design to code 
Cursor - AI code editor 
Bolt - Prompt to build 

Cursor advantages over Copilot:
1. Project-wide smarts: 
   Cursor's ability to understand and work with your entire codebase is still unmatched. 
   Copilot's context awareness can get sluggish with larger projects.
2. Speed and reliability: 
   Cursor's Composer consistently outperforms when it comes to project-wide operations. 
   While Copilot's new Edits feature is promising, it often gets stuck or slows to a crawl. Cursor just gets the job done.
3. Agent power: With Cursor, you get a polished Agent mode that just gets what you're trying to do

Cursor Usage:
1. Terminal Ctrl + K 
2. Chat panel 
3. Context - adding files 
4. Composer agent option - do the work for us based on the instruction 
5. Cursor settings and rules (Set up your own cursor rules file)
6. Composer checkpoints (revert to previous version)


Constantly stage your changes to Git
Use checkpoints for Composer generated code (to revert to previous version)
