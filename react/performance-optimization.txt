https://blog.logrocket.com/optimizing-performance-react-app/

1. Memoize components to avoid unnecessary rerenders
   (Use React.memo, useMemo, useCallback)
   memo(Component, arePropsEqual)  --> arePropsEqual internally uses Object.is to compare old and new props
   It compares the current props with the next props using Object.is for primitive values and a shallow equality check for objects. 
   // For comparing object props, create a custom equality function
   const arePropsEqual = (prevProps, nextProps) => {
      return JSON.stringify(prevProps) === JSON.stringify(nextProps);
   };
   memo(Component, arePropsEqual);
   https://codesandbox.io/p/sandbox/memo-eg-qmchpg
   https://codesandbox.io/p/sandbox/react-memo-object-props-iimgcg

2. Lazy loading routes, Code splitting, dynamic import (using lazy, Suspense)
   import Home from "./components/Home";
   const Home = React.lazy(() => import("./components/Home"));  // dynamic import 

3. Load limited items in page (using pagination, React virtualized, infinite scroll etc)
4. Lazy loading images (react-lazy-load-image-component library)
5. Decrease high frequency function calls. Use debounce, throttle.
6. Fix memory leaks by removing event listeners and clearing timing events

7. Webpack bundle optimization:
   https://blog.openreplay.com/optimizing-the-build-process-with-webpack/#:~:text=Optimizing%20the%20build%20size%20involves,results%20in%20more%20performant%20websites.
   - tree shaking (remove unused modules from app)
   - babel-minify-webpack-plugin (removes whitespaces, comments, line breaks without affecting functions)
   - compression-webpack-plugin (reduces final build size using GZip compression algorithm)
   - bundle analyzer (debug and analyze bundle files)

8. Dev Tools - Profiling, Performance to find bottlenecks
_____________________________________________________________________________________________________

Security measures:

1. Authentication and authorization
2. Don't store any sensitive data in localStorage/cookies
3. Form validation 
4. Captcha to prevent brute force attack
5. Audit npm packages
    npm audit / npm audit fix  (Check vunerabilities)
    npm outdated


